apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.replica }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      containers:
      - env:
        - name: OPERATOR_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              key: OPERATOR_PRIVATE_KEY
              name: {{ .Release.Name }}-secret-config
        {{- if .Values.config.aws.enabled }}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: AWS_ACCESS_KEY_ID
              name: {{ .Release.Name }}-secret-config
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: AWS_SECRET_ACCESS_KEY
              name: {{ .Release.Name }}-secret-config
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              key: AWS_REGION
              name: {{ .Release.Name }}-config
        - name: AWS_BUCKET_OUTPUT
          valueFrom:
            configMapKeyRef:
              key: AWS_BUCKET_OUTPUT
              name: {{ .Release.Name }}-config
        - name: AWS_BUCKET_ADMINLOGS
          valueFrom:
            configMapKeyRef:
              key: AWS_BUCKET_ADMINLOGS
              name: {{ .Release.Name }}-config
        {{- end }}
        {{- if .Values.config.ipfs.enabled }}
        - name: IPFS_OUTPUT
          valueFrom:
            configMapKeyRef:
              key: IPFS_OUTPUT
              name: {{ .Release.Name }}-config
        - name: IPFS_ADMINLOGS
          valueFrom:
            configMapKeyRef:
              key: IPFS_ADMINLOGS
              name: {{ .Release.Name }}-config
        - name: IPFS_OUTPUT_PREFIX
          valueFrom:
            configMapKeyRef:
              key: IPFS_OUTPUT_PREFIX
              name: {{ .Release.Name }}-config
        - name: IPFS_ADMINLOGS_PREFIX
          valueFrom:
            configMapKeyRef:
              key: IPFS_ADMINLOGS_PREFIX
              name: {{ .Release.Name }}-config
        - name: IPFS_EXPIRY_TIME
          valueFrom:
            configMapKeyRef:
              key: IPFS_EXPIRY_TIME
              name: {{ .Release.Name }}-config
        {{- if .Values.secret.ipfs.apiKey }}
        - name: IPFS_API_KEY
          valueFrom:
            secretKeyRef:
              key: IPFS_API_KEY
              name: {{ .Release.Name }}-secret-config
        {{- end }}
        {{- if .Values.secret.ipfs.apiClient }}
        - name: IPFS_API_CLIENT
          valueFrom:
            secretKeyRef:
              key: IPFS_API_CLIENT
              name: {{ .Release.Name }}-secret-config
        {{- end }}
        {{- end }}
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              key: LOG_LEVEL
              name: {{ .Release.Name }}-config
        - name: STORAGE_CLASS
          valueFrom:
            configMapKeyRef:
              key: STORAGE_CLASS
              name: {{ .Release.Name }}-config
        - name: POD_CONFIGURATION_CONTAINER
          valueFrom:
            configMapKeyRef:
              key: POD_CONFIGURATION_CONTAINER
              name: {{ .Release.Name }}-config
        - name: POD_PUBLISH_CONTAINER
          valueFrom:
            configMapKeyRef:
              key: POD_PUBLISH_CONTAINER
              name: {{ .Release.Name }}-config
        - name: SERVICE_ACCOUNT
          valueFrom:
            configMapKeyRef:
              key: SERVICE_ACCOUNT
              name: {{ .Release.Name }}-config
        - name: maxJobDuration
          valueFrom:
            configMapKeyRef:
              key: MAX_JOB_DURATION
              name: {{ .Release.Name }}-config
        - name: nCpu
          valueFrom:
            configMapKeyRef:
              key: ENV_N_CPU
              name: {{ .Release.Name }}-config
        - name: cpuType
          valueFrom:
            configMapKeyRef:
              key: ENV_CPU_TYPE
              name: {{ .Release.Name }}-config
        - name: gpuRam
          valueFrom:
            configMapKeyRef:
              key: ENV_GPU_RAM
              name: {{ .Release.Name }}-config
        - name: gpuType
          valueFrom:
            configMapKeyRef:
              key: ENV_GPU_TYPE
              name: {{ .Release.Name }}-config
        - name: ramGB
          valueFrom:
            configMapKeyRef:
              key: ENV_RAM_GB
              name: {{ .Release.Name }}-config
        - name: diskGB
          valueFrom:
            configMapKeyRef:
              key: ENV_DISK_GB
              name: {{ .Release.Name }}-config
        - name: priceMinute
          valueFrom:
            configMapKeyRef:
              key: ENV_PRICE_MINUTE
              name: {{ .Release.Name }}-config
        - name: description
          valueFrom:
            configMapKeyRef:
              key: ENV_DESCRIPTION
              name: {{ .Release.Name }}-config
        - name: storageExpiry
          valueFrom:
            configMapKeyRef:
              key: ENV_STORAGE_EXPIRY
              name: {{ .Release.Name }}-config
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              key: POSTGRES_DB
              name: {{ .Release.Name }}-secret-config
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: POSTGRES_USER
              name: {{ .Release.Name }}-secret-config
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRES_PASSWORD
              name: {{ .Release.Name }}-secret-config
        - name: POSTGRES_HOST
          valueFrom:
            secretKeyRef:
              key: POSTGRES_HOST
              name: {{ .Release.Name }}-secret-config
        - name: POSTGRES_PORT
          valueFrom:
            secretKeyRef:
              key: POSTGRES_PORT
              name: {{ .Release.Name }}-secret-config
        {{- if .Values.config.debug.noCleanup }}
        - name: DEBUG_NO_CLEANUP
          value: "true"
        {{- end }}
        name: {{ .Chart.Name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        {{- if .Values.secretstore.enabled }}
        volumeMounts:
        - name: {{ .Release.Name }}-{{ .Values.secretstore.provider }}-secrets
          mountPath: /mnt/secrets-store/
          readOnly: true
        {{- end }}
      {{- if .Values.secretstore.enabled }}
      volumes:
      - name: {{ .Release.Name }}-{{ .Values.secretstore.provider }}-secrets
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: {{ .Release.Name }}-{{ .Values.secretstore.provider }}-secrets
      {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      serviceAccount: {{ .Release.Name }}
      serviceAccountName: {{ .Release.Name }}
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
